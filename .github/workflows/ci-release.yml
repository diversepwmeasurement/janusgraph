env:
  BUILD_MAVEN_OPTS: -DskipTests=true --batch-mode --also-make
  ES_JAVA_OPTS: -Xms256m -Xmx512m
  VERIFY_MAVEN_OPTS: -Pcoverage
jobs:
  build-all:
    runs-on: self-hosted
    steps:
    - continue-on-error: true
      uses: actions/checkout@v4
    - continue-on-error: true
      uses: actions/cache@v4
      with:
        key: ${{ runner.os }}-maven-${{ hashFiles('**/pom.xml') }}
        path: ~/.m2/repository
        restore-keys: '${{ runner.os }}-maven-

          '
    - continue-on-error: true
      uses: actions/setup-java@v4
      with:
        distribution: zulu
        java-version: 8.0.382+5
    - continue-on-error: true
      run: mvn clean install --projects janusgraph-all -Pjanusgraph-cache -Dmaven.javadoc.skip=true
        ${{ env.BUILD_MAVEN_OPTS }}
    - continue-on-error: true
      run: mvn verify --projects janusgraph-all -Pjanusgraph-cache ${{ env.VERIFY_MAVEN_OPTS
        }}
  dist-tests:
    needs: build-all
    runs-on: self-hosted
    steps:
    - continue-on-error: true
      uses: actions/checkout@v4
    - continue-on-error: true
      uses: actions/cache@v4
      with:
        key: ${{ runner.os }}-maven-${{ hashFiles('**/pom.xml') }}
        path: ~/.m2/repository
        restore-keys: '${{ runner.os }}-maven-

          '
    - continue-on-error: true
      if: matrix.java == 8
      uses: actions/setup-java@v4
      with:
        distribution: zulu
        java-version: 8.0.382+5
    - continue-on-error: true
      if: matrix.java == 11
      uses: actions/setup-java@v4
      with:
        distribution: zulu
        java-version: 11.0.20+1
    - continue-on-error: true
      run: sudo apt-get update && sudo apt-get install -y expect
    - continue-on-error: true
      run: mvn clean install -Pjanusgraph-release ${{ env.BUILD_MAVEN_OPTS }} -Dgpg.skip=true
        ${{ matrix.args }}
    - continue-on-error: true
      run: mvn verify -pl janusgraph-dist -Pjanusgraph-release -Dgpg.skip=true ${{
        matrix.args }}
    - continue-on-error: true
      uses: actions/upload-artifact@v4
      with:
        name: distribution-build-full-java-${{ matrix.java }}
        path: janusgraph-dist/target/janusgraph-full-*.zip
    - continue-on-error: true
      uses: actions/upload-artifact@v4
      with:
        name: distribution-build-core-java-${{ matrix.java }}
        path: janusgraph-dist/target/janusgraph-[!full]*.zip
    - continue-on-error: true
      name: Set JanusGraph version environment variable
      run: 'export JG_VER="$(mvn help:evaluate -Dexpression=project.version -q -DforceStdout)-$(git
        rev-parse --short HEAD)"

        echo "JG_VER=${JG_VER}" >> $GITHUB_ENV

        '
    - continue-on-error: true
      if: github.repository == 'janusgraph/janusgraph'
      name: Run Trivy vulnerability scanner
      uses: aquasecurity/trivy-action@0.23.0
      with:
        format: sarif
        image-ref: ghcr.io/janusgraph/janusgraph:${{ env.JG_VER }}${{ matrix.tag_suffix
          }}
        output: trivy-results.sarif
    - continue-on-error: true
      if: github.repository == 'janusgraph/janusgraph'
      name: Upload Trivy scan results to GitHub Security tab
      uses: github/codeql-action/upload-sarif@v3
      with:
        sarif_file: trivy-results.sarif
    strategy:
      fail-fast: false
      matrix:
        include:
        - args: ''
          java: 8
          tag_suffix: ''
        - args: -Pjava-11
          java: 11
          tag_suffix: -java-11
  tp-tests:
    if: github.event_name == 'push' && contains(github.event.head_commit.message,
      '[tp-tests]') || github.event_name == 'pull_request' && contains(github.event.pull_request.title,
      '[tp-tests]') || github.event_name == 'schedule'
    needs: build-all
    runs-on: self-hosted
    steps:
    - continue-on-error: true
      uses: actions/checkout@v4
    - continue-on-error: true
      uses: actions/cache@v4
      with:
        key: ${{ runner.os }}-maven-${{ hashFiles('**/pom.xml') }}
        path: ~/.m2/repository
        restore-keys: '${{ runner.os }}-maven-

          '
    - continue-on-error: true
      if: matrix.java == 8
      uses: actions/setup-java@v4
      with:
        distribution: zulu
        java-version: 8.0.382+5
    - continue-on-error: true
      if: matrix.java == 11
      uses: actions/setup-java@v4
      with:
        distribution: zulu
        java-version: 11.0.20+1
    - continue-on-error: true
      run: mvn clean install --projects janusgraph-${{ matrix.module }} ${{ env.BUILD_MAVEN_OPTS
        }} ${{ matrix.install-args }}
    - continue-on-error: true
      run: mvn verify --projects janusgraph-${{ matrix.module }} ${{ matrix.install-args
        }} ${{ matrix.args }}
    strategy:
      fail-fast: false
      matrix:
        include:
        - args: -Dtest.skip.tp=false -DskipTests=true
          java: 8
          module: inmemory
        - args: -Dtest.skip.tp=false -DskipTests=true
          java: 8
          module: berkeleyje
        - args: -Pcassandra3-byteordered -Dtest.skip.tp=false -DskipTests=true
          java: 8
          module: cql
        - args: -Pcassandra3-murmur -Dtest.skip.tp=false -DskipTests=true
          java: 8
          module: cql
        - args: -Dtest.skip.tp=false -DskipTests=true
          java: 8
          module: hbase
        - args: -Dtest.skip.tp=false -DskipTests=true
          install-args: -Pjava-11
          java: 11
          module: inmemory
        - args: -Dtest.skip.tp=false -DskipTests=true
          install-args: -Pjava-11
          java: 11
          module: berkeleyje
        - args: -Pcassandra3-byteordered -Dtest.skip.tp=false -DskipTests=true
          install-args: -Pjava-11
          java: 11
          module: cql
        - args: -Pcassandra3-murmur -Dtest.skip.tp=false -DskipTests=true
          install-args: -Pjava-11
          java: 11
          module: cql
        - args: -Pcassandra4-byteordered -Dtest.skip.tp=false -DskipTests=true
          install-args: -Pjava-11
          java: 11
          module: cql
        - args: -Pcassandra4-murmur -Dtest.skip.tp=false -DskipTests=true
          install-args: -Pjava-11
          java: 11
          module: cql
        - args: -Dtest.skip.tp=false -DskipTests=true
          install-args: -Pjava-11
          java: 11
          module: hbase
name: CI Release
on:
  repository_dispatch:
    types: trigger-ga___ci-release.yml
