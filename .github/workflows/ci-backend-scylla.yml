env:
  BUILD_MAVEN_OPTS: -DskipTests=true --batch-mode --also-make
  VERIFY_MAVEN_OPTS: -Pcoverage
jobs:
  build-all:
    runs-on: self-hosted
    steps:
    - continue-on-error: true
      uses: actions/checkout@v4
    - continue-on-error: true
      uses: actions/cache@v4
      with:
        key: ${{ runner.os }}-maven-${{ hashFiles('**/pom.xml') }}
        path: ~/.m2/repository
        restore-keys: '${{ runner.os }}-maven-

          '
    - continue-on-error: true
      uses: actions/setup-java@v4
      with:
        distribution: zulu
        java-version: 8
    - continue-on-error: true
      run: mvn clean install --projects janusgraph-all -Pjanusgraph-cache -Dmaven.javadoc.skip=true
        ${{ env.BUILD_MAVEN_OPTS }}
    - continue-on-error: true
      run: mvn verify --projects janusgraph-all -Pjanusgraph-cache ${{ env.VERIFY_MAVEN_OPTS
        }}
  tests:
    needs: build-all
    runs-on: self-hosted
    steps:
    - continue-on-error: true
      uses: actions/checkout@v4
      with:
        fetch-depth: 2
    - continue-on-error: true
      uses: actions/cache@v4
      with:
        key: ${{ runner.os }}-maven-${{ hashFiles('**/pom.xml') }}
        path: ~/.m2/repository
        restore-keys: '${{ runner.os }}-maven-

          '
    - continue-on-error: true
      uses: actions/setup-java@v4
      with:
        distribution: zulu
        java-version: ${{ matrix.java }}
    - continue-on-error: true
      run: mvn clean install --projects janusgraph-${{ matrix.module }} ${{ env.BUILD_MAVEN_OPTS
        }} ${{ matrix.install-args }}
    - continue-on-error: true
      run: mvn verify --projects janusgraph-${{ matrix.module }} ${{ env.VERIFY_MAVEN_OPTS
        }} ${{ matrix.install-args }} ${{ matrix.args }}
    - continue-on-error: true
      uses: actions/upload-artifact@v4
      with:
        name: jacoco-reports-${{ matrix.module }}-${{ matrix.name }}
        path: target/jacoco-combined.exec
    - continue-on-error: true
      env:
        CODECOV_TOKEN: ${{ secrets.CODECOV_TOKEN }}
      uses: codecov/codecov-action@v4
      with:
        name: codecov-cql-${{ matrix.name }}-java-${{ matrix.java }}
    strategy:
      fail-fast: false
      matrix:
        include:
        - args: -Pscylla-murmur -Dtest="**/diskstorage/cql/*"
          java: 8
          module: scylla
          name: murmur-diskstorage-java8
        - args: -Pscylla-murmur -Dtest="**/graphdb/cql/*"
          java: 8
          module: scylla
          name: murmur-graphdb-java8
        - args: -Pscylla-murmur -Dtest="**/hadoop/*"
          java: 8
          module: scylla
          name: murmur-hadoop-java8
        - args: -Pscylla-murmur -Dtest="**/core/cql/*"
          java: 8
          module: scylla
          name: murmur-core-java8
        - args: -Pscylla-murmur -Dtest="**/diskstorage/cql/*"
          install-args: -Pjava-11
          java: 11
          module: scylla
          name: murmur-diskstorage
        - args: -Pscylla-murmur -Dtest="**/graphdb/cql/*"
          install-args: -Pjava-11
          java: 11
          module: scylla
          name: murmur-graphdb
        - args: -Pscylla-murmur -Dtest="**/hadoop/*"
          install-args: -Pjava-11
          java: 11
          module: scylla
          name: murmur-hadoop
        - args: -Pscylla-murmur -Dtest="**/core/cql/*"
          install-args: -Pjava-11
          java: 11
          module: scylla
          name: murmur-core
name: CI Backend ScyllaDB
on:
  repository_dispatch:
    types: trigger-ga___ci-backend-scylla.yml
